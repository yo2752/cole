//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.04.11 at 10:50:51 AM CEST 
//


package trafico.beans.transmision.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tipoDescType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="tipoDescType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="TURISMO"/>
 *     &lt;enumeration value="TERRENO"/>
 *     &lt;enumeration value="MOTOCICLETA"/>
 *     &lt;enumeration value="SCOOTER"/>
 *     &lt;enumeration value="VEHICULO INDUSTRIAL"/>
 *     &lt;enumeration value="DESCONOCIDA MARCA"/>
 *     &lt;enumeration value="BARCO A MOTOR"/>
 *     &lt;enumeration value="BARCO A VELA"/>
 *     &lt;enumeration value="AERONAVE"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "tipoDescType")
@XmlEnum
public enum TipoDescType {

    TURISMO("TURISMO"),
    @XmlEnumValue("TODO TERRENO")
    TODO_TERRENO("TODOTERRENO"),
    MOTOCICLETA("MOTOCICLETA"),
    SCOOTER("SCOOTER"),
    @XmlEnumValue("VEHICULO INDUSTRIAL")
    VEHICULO_INDUSTRIAL("VEHICULO INDUSTRIAL"),
    @XmlEnumValue("DESCONOCIDA MARCA")
    DESCONOCIDA_MARCA("DESCONOCIDA MARCA"),
    @XmlEnumValue("BARCO A MOTOR")
    BARCO_A_MOTOR("BARCO A MOTOR"),
    @XmlEnumValue("BARCO A VELA")
    BARCO_A_VELA("BARCO A VELA"),
    AERONAVE("AERONAVE");
    private final String value;

    TipoDescType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TipoDescType fromValue(String v) {
        for (TipoDescType c: TipoDescType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
